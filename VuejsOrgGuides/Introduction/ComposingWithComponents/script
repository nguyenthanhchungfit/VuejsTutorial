The component system is another important concept in Vue, because it’s an abstraction that allows us to build large-scale 
    applications composed of small, self-contained, and often reusable components.

In Vue, a component is essentially a Vue instance with pre-defined options.

This is a contrived example, but we have managed to separate our app into two smaller units,
    and the child is reasonably well-decoupled from the parent via the props interface. We can now further improve our <todo-item> 
    component with more complex template and logic without affecting the parent app.

In a large application, it is necessary to divide the whole app into components to make development manageable. 
    We will talk a lot more about components later in the guide, 
    but here’s an (imaginary) example of what an app’s template might look like with components:

    <div id="app">
        <app-nav></app-nav>
        <app-view>
            <app-sidebar></app-sidebar>
            <app-content></app-content>
        </app-view>
    </div>